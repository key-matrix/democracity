import 'package:flutter/material.dart';import 'package:flutter_riverpod/flutter_riverpod.dart';import '../../model/liverpod/liverpod.dart';import '../../sampleSouces_rbm/view/view_widget/screen/addmin/dash_board_screen/dash_board_screen.dart';///ユーザName final userNameProvider = StateProvider<String>((ref) => "");///appTittleName final userNickNameProvider = StateProvider<String>((ref) => "");class LoginTop extends ConsumerStatefulWidget {  const LoginTop({Key? key}) : super(key: key);  @override  _LoginTopState createState() => _LoginTopState();}class _LoginTopState extends ConsumerState<LoginTop> {  //パス隠し bool _isObscure = true; //userName  final userNameCtl = TextEditingController(); //pass  final passwordCtl = TextEditingController();  var _isObscure;  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: AppBar(        title: Text(ref.read(appNameProvider)),        backgroundColor: Colors.blue,      ),      body: SingleChildScrollView(        child: Center(          child: Container(            padding: const EdgeInsets.all(30.0),            child: Column(                crossAxisAlignment: CrossAxisAlignment.start,                children: <Widget>[                  Padding(                    padding:                        const EdgeInsets.symmetric(horizontal: 8, vertical: 16),                    child: TextFormField(                      controller: userNameCtl,                      decoration: const InputDecoration(                        labelText: 'ユーザー名を入力',                      ), //確定時判定                      onChanged: (String value) {                        // userNameCtl.text = value; userNameCtl.selection =                        TextSelection.fromPosition(                          TextPosition(offset: userNameCtl.text.length),                        );                        ref                            .read(userNickNameProvider as ProviderListenable)                            .state = value; // debugPrint(userNameCtl.text);                      },                    ),                  ),                  Padding(                    padding:                        const EdgeInsets.symmetric(horizontal: 8, vertical: 16),                    child: TextFormField(                      controller: passwordCtl,                      obscureText: _isObscure, //確定時判定                      onChanged: (String value) {                        // userNameCtl.text = value; passwordCtl.selection =                        TextSelection.fromPosition(                          TextPosition(offset: passwordCtl.text.length),                        );                        ref                            .read(userNickNameProvider as ProviderListenable)                            .state = value; // debugPrint(userNameCtl.text);                      },                      decoration: InputDecoration(                        labelText: 'パスワード',                        suffixIcon: IconButton(                          icon: Icon(_isObscure                              ? Icons.visibility_off                              : Icons.visibility),                          onPressed: () {                            setState(                              () {                                _isObscure = !_isObscure;                              },                            );                          },                        ),                      ),                    ),                  ),                ]),          ),        ),      ),    );  }}